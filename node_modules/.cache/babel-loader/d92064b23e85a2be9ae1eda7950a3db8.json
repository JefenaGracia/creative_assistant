{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, query, where, getDocs, doc, getDoc } from 'firebase/firestore'; // Added getDoc\nimport { useNavigate } from 'react-router-dom';\nimport { gapi } from 'gapi-script';\nimport './StudentDashboard.css';\nconst StudentDashboard = () => {\n  const [classrooms, setClassrooms] = useState([]);\n  const [selectedClassroom, setSelectedClassroom] = useState(null);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchClassrooms = async () => {\n      setLoading(true);\n      try {\n        // Get the current user's email from Google Auth\n        const authInstance = gapi.auth2.getAuthInstance();\n        const googleUser = authInstance.currentUser.get();\n        const profile = googleUser.getBasicProfile();\n        const userEmail = profile.getEmail();\n\n        // Fetch classrooms where the student's email is present in the students subcollection\n        const classroomsCollection = collection(db, 'classrooms');\n        const querySnapshot = await getDocs(classroomsCollection);\n        const classroomsData = [];\n        for (const docSnap of querySnapshot.docs) {\n          const studentsSubcollection = collection(docSnap.ref, 'students');\n          const studentDoc = await getDoc(doc(studentsSubcollection, userEmail));\n          if (studentDoc.exists()) {\n            classroomsData.push({\n              id: docSnap.id,\n              classroomName: docSnap.data().classID // Assume classID field stores classroom name\n            });\n          }\n        }\n        setClassrooms(classroomsData);\n      } catch (error) {\n        console.error(\"Error fetching classrooms:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchClassrooms();\n  }, []);\n  const handleClassroomClick = async classroomId => {\n    setLoading(true);\n    setSelectedClassroom(classroomId);\n    try {\n      // Fetch assignments for the selected classroom\n      const assignmentsCollection = collection(db, 'classrooms', classroomId, 'assignments');\n      const querySnapshot = await getDocs(assignmentsCollection);\n      const assignmentsData = [];\n      querySnapshot.forEach(doc => {\n        assignmentsData.push(doc.data());\n      });\n      setAssignments(assignmentsData);\n    } catch (error) {\n      console.error(\"Error fetching assignments:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const openProjectPage = projectName => {\n    navigate(`/project/${projectName}`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"student-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Student Dashboard\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Loading your classrooms...\") : classrooms.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"classroom-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Your Classrooms\"), classrooms.map(classroom => /*#__PURE__*/React.createElement(\"button\", {\n    key: classroom.id,\n    onClick: () => handleClassroomClick(classroom.id),\n    className: \"classroom-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, classroom.classroomName))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"No classrooms found.\"), selectedClassroom && assignments.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assignments-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Assignments in \", selectedClassroom), assignments.map((assignment, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"assignment-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, assignment.projectName), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openProjectPage(assignment.projectName),\n    className: \"project-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"View Project\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }\n  }, \"Due Date:\"), \" \", assignment.dueDate), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 18\n    }\n  }, \"Status:\"), \" \", assignment.status)))), selectedClassroom && assignments.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"No assignments found for this classroom.\"));\n};\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","db","collection","query","where","getDocs","doc","getDoc","useNavigate","gapi","StudentDashboard","classrooms","setClassrooms","selectedClassroom","setSelectedClassroom","assignments","setAssignments","loading","setLoading","navigate","fetchClassrooms","authInstance","auth2","getAuthInstance","googleUser","currentUser","get","profile","getBasicProfile","userEmail","getEmail","classroomsCollection","querySnapshot","classroomsData","docSnap","docs","studentsSubcollection","ref","studentDoc","exists","push","id","classroomName","data","classID","error","console","handleClassroomClick","classroomId","assignmentsCollection","assignmentsData","forEach","openProjectPage","projectName","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","classroom","key","onClick","assignment","index","dueDate","status"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, query, where, getDocs, doc, getDoc } from 'firebase/firestore'; // Added getDoc\nimport { useNavigate } from 'react-router-dom';\nimport { gapi } from 'gapi-script';\nimport './StudentDashboard.css';\n\nconst StudentDashboard = () => {\n  const [classrooms, setClassrooms] = useState([]);\n  const [selectedClassroom, setSelectedClassroom] = useState(null);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchClassrooms = async () => {\n      setLoading(true);\n      try {\n        // Get the current user's email from Google Auth\n        const authInstance = gapi.auth2.getAuthInstance();\n        const googleUser = authInstance.currentUser.get();\n        const profile = googleUser.getBasicProfile();\n        const userEmail = profile.getEmail();\n\n        // Fetch classrooms where the student's email is present in the students subcollection\n        const classroomsCollection = collection(db, 'classrooms');\n        const querySnapshot = await getDocs(classroomsCollection);\n\n        const classroomsData = [];\n        for (const docSnap of querySnapshot.docs) {\n          const studentsSubcollection = collection(docSnap.ref, 'students');\n          const studentDoc = await getDoc(doc(studentsSubcollection, userEmail));\n          \n          if (studentDoc.exists()) {\n            classroomsData.push({\n              id: docSnap.id,\n              classroomName: docSnap.data().classID, // Assume classID field stores classroom name\n            });\n          }\n        }\n        \n        setClassrooms(classroomsData);\n      } catch (error) {\n        console.error(\"Error fetching classrooms:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchClassrooms();\n  }, []);\n\n  const handleClassroomClick = async (classroomId) => {\n    setLoading(true);\n    setSelectedClassroom(classroomId);\n\n    try {\n      // Fetch assignments for the selected classroom\n      const assignmentsCollection = collection(db, 'classrooms', classroomId, 'assignments');\n      const querySnapshot = await getDocs(assignmentsCollection);\n\n      const assignmentsData = [];\n      querySnapshot.forEach((doc) => {\n        assignmentsData.push(doc.data());\n      });\n\n      setAssignments(assignmentsData);\n    } catch (error) {\n      console.error(\"Error fetching assignments:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const openProjectPage = (projectName) => {\n    navigate(`/project/${projectName}`);\n  };\n\n  return (\n    <div className=\"student-dashboard\">\n      <h2>Student Dashboard</h2>\n\n      {loading ? (\n        <p>Loading your classrooms...</p>\n      ) : classrooms.length > 0 ? (\n        <div className=\"classroom-list\">\n          <h3>Your Classrooms</h3>\n          {classrooms.map((classroom) => (\n            <button\n              key={classroom.id}\n              onClick={() => handleClassroomClick(classroom.id)}\n              className=\"classroom-button\"\n            >\n              {classroom.classroomName}\n            </button>\n          ))}\n        </div>\n      ) : (\n        <p>No classrooms found.</p>\n      )}\n\n      {selectedClassroom && assignments.length > 0 && (\n        <div className=\"assignments-list\">\n          <h3>Assignments in {selectedClassroom}</h3>\n          {assignments.map((assignment, index) => (\n            <div key={index} className=\"assignment-card\">\n              <h4>{assignment.projectName}</h4>\n              <button onClick={() => openProjectPage(assignment.projectName)} className=\"project-button\">\n                View Project\n              </button>\n              <p><strong>Due Date:</strong> {assignment.dueDate}</p>\n              <p><strong>Status:</strong> {assignment.status}</p>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {selectedClassroom && assignments.length === 0 && (\n        <p>No assignments found for this classroom.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}