{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, getDocs, doc, getDoc } from 'firebase/firestore'; // Added doc here\nimport { useNavigate } from 'react-router-dom';\nimport { gapi } from 'gapi-script';\nimport './StudentDashboard.css'; // Ensure the CSS file is imported\n\nconst StudentDashboard = () => {\n  const [classrooms, setClassrooms] = useState([]);\n  const [selectedClassroom, setSelectedClassroom] = useState(null);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchClassrooms = async () => {\n      setLoading(true);\n      try {\n        // Get the current user's email from Google Auth\n        const authInstance = gapi.auth2.getAuthInstance();\n        const googleUser = authInstance.currentUser.get();\n        const profile = googleUser.getBasicProfile();\n        const userEmail = profile.getEmail();\n\n        // Fetch classrooms where the student's email is present in the students subcollection\n        const classroomsCollection = collection(db, 'classrooms');\n        const querySnapshot = await getDocs(classroomsCollection);\n        const classroomsData = [];\n        for (const docSnap of querySnapshot.docs) {\n          const studentsSubcollection = collection(docSnap.ref, 'students');\n          const studentDoc = await getDoc(doc(studentsSubcollection, userEmail));\n          if (studentDoc.exists()) {\n            classroomsData.push({\n              id: docSnap.id,\n              classroomName: docSnap.data().classID // Assume classID field stores classroom name\n            });\n          }\n        }\n        if (classroomsData.length === 0) {\n          setError('No classrooms found.');\n        }\n        setClassrooms(classroomsData);\n      } catch (error) {\n        console.error(\"Error fetching classrooms:\", error);\n        setError('Error fetching classrooms.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchClassrooms();\n  }, []);\n  const handleClassroomClick = async classroomId => {\n    setLoading(true);\n    setSelectedClassroom(classroomId);\n    setAssignments([]); // Clear previous assignments\n\n    try {\n      // Fetch assignments for the selected classroom\n      const assignmentsCollection = collection(db, 'classrooms', classroomId, 'projects');\n      const querySnapshot = await getDocs(assignmentsCollection);\n      if (querySnapshot.empty) {\n        setError('No assignments found for this classroom.');\n      } else {\n        const assignmentsData = querySnapshot.docs.map(doc => doc.data());\n        setAssignments(assignmentsData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching assignments:\", error);\n      setError('Error fetching assignments.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const openProjectPage = projectName => {\n    navigate(`/project/${projectName}`);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    const authInstance = gapi.auth2.getAuthInstance();\n    authInstance.signOut().then(() => {\n      navigate('/');\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"student-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Creative Assistant\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigate('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigate('/profile'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Logout\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Your Classrooms\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Loading your classrooms...\") : error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, error) : classrooms.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"classroom-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, classrooms.map(classroom => /*#__PURE__*/React.createElement(\"button\", {\n    key: classroom.id,\n    onClick: () => handleClassroomClick(classroom.id),\n    className: \"classroom-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, classroom.classroomName))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"No classrooms found.\"), selectedClassroom && assignments.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assignments-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Assignments in \", selectedClassroom), assignments.map((assignment, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"assignment-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, assignment.projectName), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openProjectPage(assignment.projectName),\n    className: \"project-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"View Project\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 20\n    }\n  }, \"Due Date:\"), \" \", assignment.dueDate), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 20\n    }\n  }, \"Status:\"), \" \", assignment.status)))), selectedClassroom && assignments.length === 0 && !loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"No assignments found for this classroom.\")));\n};\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","useNavigate","gapi","StudentDashboard","classrooms","setClassrooms","selectedClassroom","setSelectedClassroom","assignments","setAssignments","loading","setLoading","error","setError","navigate","fetchClassrooms","authInstance","auth2","getAuthInstance","googleUser","currentUser","get","profile","getBasicProfile","userEmail","getEmail","classroomsCollection","querySnapshot","classroomsData","docSnap","docs","studentsSubcollection","ref","studentDoc","exists","push","id","classroomName","data","classID","length","console","handleClassroomClick","classroomId","assignmentsCollection","empty","assignmentsData","map","openProjectPage","projectName","handleLogout","signOut","then","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","classroom","key","assignment","index","dueDate","status"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, getDocs, doc, getDoc } from 'firebase/firestore'; // Added doc here\nimport { useNavigate } from 'react-router-dom';\nimport { gapi } from 'gapi-script';\nimport './StudentDashboard.css'; // Ensure the CSS file is imported\n\nconst StudentDashboard = () => {\n  const [classrooms, setClassrooms] = useState([]);\n  const [selectedClassroom, setSelectedClassroom] = useState(null);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchClassrooms = async () => {\n      setLoading(true);\n      try {\n        // Get the current user's email from Google Auth\n        const authInstance = gapi.auth2.getAuthInstance();\n        const googleUser = authInstance.currentUser.get();\n        const profile = googleUser.getBasicProfile();\n        const userEmail = profile.getEmail();\n\n        // Fetch classrooms where the student's email is present in the students subcollection\n        const classroomsCollection = collection(db, 'classrooms');\n        const querySnapshot = await getDocs(classroomsCollection);\n\n        const classroomsData = [];\n        for (const docSnap of querySnapshot.docs) {\n          const studentsSubcollection = collection(docSnap.ref, 'students');\n          const studentDoc = await getDoc(doc(studentsSubcollection, userEmail));\n\n          if (studentDoc.exists()) {\n            classroomsData.push({\n              id: docSnap.id,\n              classroomName: docSnap.data().classID, // Assume classID field stores classroom name\n            });\n          }\n        }\n\n        if (classroomsData.length === 0) {\n          setError('No classrooms found.');\n        }\n        setClassrooms(classroomsData);\n      } catch (error) {\n        console.error(\"Error fetching classrooms:\", error);\n        setError('Error fetching classrooms.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchClassrooms();\n  }, []);\n\n  const handleClassroomClick = async (classroomId) => {\n    setLoading(true);\n    setSelectedClassroom(classroomId);\n    setAssignments([]); // Clear previous assignments\n\n    try {\n      // Fetch assignments for the selected classroom\n      const assignmentsCollection = collection(db, 'classrooms', classroomId, 'projects');\n      const querySnapshot = await getDocs(assignmentsCollection);\n\n      if (querySnapshot.empty) {\n        setError('No assignments found for this classroom.');\n      } else {\n        const assignmentsData = querySnapshot.docs.map(doc => doc.data());\n        setAssignments(assignmentsData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching assignments:\", error);\n      setError('Error fetching assignments.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const openProjectPage = (projectName) => {\n    navigate(`/project/${projectName}`);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    const authInstance = gapi.auth2.getAuthInstance();\n    authInstance.signOut().then(() => {\n      navigate('/');\n    });\n  };\n\n  return (\n    <div className=\"student-dashboard\">\n      {/* Navigation Bar */}\n      <div className=\"navbar\">\n        <h2>Creative Assistant</h2>\n        <div className=\"nav-links\">\n          <button onClick={() => navigate('/')}>Home</button>\n          <button onClick={() => navigate('/profile')}>Profile</button>\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n\n      <div className=\"dashboard-content\">\n        <h3>Your Classrooms</h3>\n\n        {loading ? (\n          <p className=\"loading\">Loading your classrooms...</p>\n        ) : error ? (\n          <p className=\"error\">{error}</p>\n        ) : classrooms.length > 0 ? (\n          <div className=\"classroom-list\">\n            {classrooms.map((classroom) => (\n              <button\n                key={classroom.id}\n                onClick={() => handleClassroomClick(classroom.id)}\n                className=\"classroom-button\"\n              >\n                {classroom.classroomName}\n              </button>\n            ))}\n          </div>\n        ) : (\n          <p>No classrooms found.</p>\n        )}\n\n        {selectedClassroom && assignments.length > 0 && (\n          <div className=\"assignments-list\">\n            <h3>Assignments in {selectedClassroom}</h3>\n            {assignments.map((assignment, index) => (\n              <div key={index} className=\"assignment-card\">\n                <h4>{assignment.projectName}</h4>\n                <button\n                  onClick={() => openProjectPage(assignment.projectName)}\n                  className=\"project-button\"\n                >\n                  View Project\n                </button>\n                <p><strong>Due Date:</strong> {assignment.dueDate}</p>\n                <p><strong>Status:</strong> {assignment.status}</p>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {selectedClassroom && assignments.length === 0 && !loading && (\n          <p>No assignments found for this classroom.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}