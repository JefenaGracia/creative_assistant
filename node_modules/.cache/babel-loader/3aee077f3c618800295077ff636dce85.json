{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/ClassroomDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { useNavigate, useParams, Link, Outlet } from 'react-router-dom'; // Added Outlet for nested routes\nimport { collection, doc, getDoc, getDocs, setDoc } from 'firebase/firestore';\nimport './ClassroomDetails.css';\nconst ClassroomDetails = () => {\n  const [classroom, setClassroom] = useState(null);\n  const [students, setStudents] = useState([]);\n  const [projects, setProjects] = useState([]); // New state for projects\n  const [loading, setLoading] = useState(true);\n  const [newProjectName, setNewProjectName] = useState(''); // New state for new project input\n  const [newProjectDescription, setNewProjectDescription] = useState('');\n  const {\n    classroomId\n  } = useParams();\n  useEffect(() => {\n    const fetchClassroomDetails = async () => {\n      try {\n        const classroomRef = doc(db, 'classrooms', classroomId);\n        const classroomSnap = await getDoc(classroomRef);\n        console.log(\"Classroom Document:\", classroomSnap.data());\n        if (classroomSnap.exists()) {\n          setClassroom(classroomSnap.data());\n\n          // Fetch students\n          const studentsCollection = collection(classroomRef, 'students');\n          const studentSnapshot = await getDocs(studentsCollection);\n          const studentData = studentSnapshot.docs.map(doc => doc.data());\n          console.log(\"Student Data:\", studentData);\n          setStudents(studentData);\n\n          // Fetch projects\n          const projectsCollection = collection(classroomRef, 'projects');\n          const projectsSnapshot = await getDocs(projectsCollection);\n          const projectData = projectsSnapshot.docs.map(doc => doc.data());\n          console.log(\"Projects Data:\", projectData);\n          setProjects(projectData);\n        } else {\n          console.log(\"Classroom does not exist\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching classroom details:\", error);\n      }\n      setLoading(false);\n    };\n    fetchClassroomDetails();\n  }, [classroomId]);\n  const handleAddProject = async () => {\n    if (!newProjectName) return; // Ensure project name is provided\n\n    const projectRef = doc(db, 'classrooms', classroomId, 'projects', newProjectName);\n    await setDoc(projectRef, {\n      projectName: newProjectName,\n      description: newProjectDescription || ''\n    });\n\n    // Update local state to reflect the new project\n    setProjects([...projects, {\n      projectName: newProjectName,\n      description: newProjectDescription\n    }]);\n    setNewProjectName('');\n    setNewProjectDescription('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"classroom-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Loading classroom details...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, classroom === null || classroom === void 0 ? void 0 : classroom.classID), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"classroom-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/classroom/${classroomId}/manage`,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Manage Classroom\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/classroom/${classroomId}/projects`,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Projects\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"students-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Enrolled Students\"), students.length > 0 ? students.map(student => /*#__PURE__*/React.createElement(\"p\", {\n    key: student.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, student.lastName, \", \", student.firstName)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"No students enrolled yet.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Add Project\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Project Name\",\n    value: newProjectName,\n    onChange: e => setNewProjectName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Project Description\",\n    value: newProjectDescription,\n    onChange: e => setNewProjectDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Add Project\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Projects\"), projects.length > 0 ? projects.map(project => /*#__PURE__*/React.createElement(\"div\", {\n    key: project.projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, project.projectName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, project.description))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"No projects available yet.\")), /*#__PURE__*/React.createElement(Outlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })));\n};\nexport default ClassroomDetails;","map":{"version":3,"names":["React","useState","useEffect","db","useNavigate","useParams","Link","Outlet","collection","doc","getDoc","getDocs","setDoc","ClassroomDetails","classroom","setClassroom","students","setStudents","projects","setProjects","loading","setLoading","newProjectName","setNewProjectName","newProjectDescription","setNewProjectDescription","classroomId","fetchClassroomDetails","classroomRef","classroomSnap","console","log","data","exists","studentsCollection","studentSnapshot","studentData","docs","map","projectsCollection","projectsSnapshot","projectData","error","handleAddProject","projectRef","projectName","description","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","classID","to","length","student","key","email","lastName","firstName","type","placeholder","value","onChange","e","target","onClick","project"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/ClassroomDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { useNavigate, useParams, Link, Outlet } from 'react-router-dom'; // Added Outlet for nested routes\nimport { collection, doc, getDoc, getDocs, setDoc } from 'firebase/firestore';\nimport './ClassroomDetails.css';\n\nconst ClassroomDetails = () => {\n  const [classroom, setClassroom] = useState(null);\n  const [students, setStudents] = useState([]);\n  const [projects, setProjects] = useState([]); // New state for projects\n  const [loading, setLoading] = useState(true);\n  const [newProjectName, setNewProjectName] = useState(''); // New state for new project input\n  const [newProjectDescription, setNewProjectDescription] = useState('');\n  const { classroomId } = useParams();\n\n  useEffect(() => {\n    const fetchClassroomDetails = async () => {\n      try {\n        const classroomRef = doc(db, 'classrooms', classroomId);\n        const classroomSnap = await getDoc(classroomRef);\n        console.log(\"Classroom Document:\", classroomSnap.data());\n\n        if (classroomSnap.exists()) {\n          setClassroom(classroomSnap.data());\n\n          // Fetch students\n          const studentsCollection = collection(classroomRef, 'students');\n          const studentSnapshot = await getDocs(studentsCollection);\n          const studentData = studentSnapshot.docs.map(doc => doc.data());\n          console.log(\"Student Data:\", studentData);\n          setStudents(studentData);\n\n          // Fetch projects\n          const projectsCollection = collection(classroomRef, 'projects');\n          const projectsSnapshot = await getDocs(projectsCollection);\n          const projectData = projectsSnapshot.docs.map(doc => doc.data());\n          console.log(\"Projects Data:\", projectData);\n          setProjects(projectData);\n        } else {\n          console.log(\"Classroom does not exist\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching classroom details:\", error);\n      }\n      setLoading(false);\n    };\n\n    fetchClassroomDetails();\n  }, [classroomId]);\n\n  const handleAddProject = async () => {\n    if (!newProjectName) return; // Ensure project name is provided\n\n    const projectRef = doc(db, 'classrooms', classroomId, 'projects', newProjectName);\n    await setDoc(projectRef, {\n      projectName: newProjectName,\n      description: newProjectDescription || '',\n    });\n\n    // Update local state to reflect the new project\n    setProjects([...projects, { projectName: newProjectName, description: newProjectDescription }]);\n    setNewProjectName('');\n    setNewProjectDescription('');\n  };\n\n  return (\n    <div className=\"classroom-details\">\n      {loading ? (\n        <p>Loading classroom details...</p>\n      ) : (\n        <>\n          <h1>{classroom?.classID}</h1>\n          <div className=\"classroom-buttons\">\n            <Link to={`/classroom/${classroomId}/manage`} className=\"button\">Manage Classroom</Link>\n            <Link to={`/classroom/${classroomId}/projects`} className=\"button\">Projects</Link>\n          </div>\n\n          {/* Display enrolled students */}\n          <div className=\"students-list\">\n            <h2>Enrolled Students</h2>\n            {students.length > 0 ? (\n              students.map(student => (\n                <p key={student.email}>{student.lastName}, {student.firstName}</p>\n              ))\n            ) : (\n              <p>No students enrolled yet.</p>\n            )}\n          </div>\n\n          {/* Add Project Section */}\n          <div className=\"add-project\">\n            <h2>Add Project</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Project Name\"\n              value={newProjectName}\n              onChange={(e) => setNewProjectName(e.target.value)}\n            />\n            <textarea\n              placeholder=\"Project Description\"\n              value={newProjectDescription}\n              onChange={(e) => setNewProjectDescription(e.target.value)}\n            />\n            <button onClick={handleAddProject}>Add Project</button>\n          </div>\n\n          {/* Display Projects */}\n          <div className=\"projects-list\">\n            <h2>Projects</h2>\n            {projects.length > 0 ? (\n              projects.map(project => (\n                <div key={project.projectName}>\n                  <p>{project.projectName}</p>\n                  <p>{project.description}</p>\n                </div>\n              ))\n            ) : (\n              <p>No projects available yet.</p>\n            )}\n          </div>\n\n          {/* Outlet to render nested routes like \"Manage Classroom\" and \"Projects\" */}\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClassroomDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}