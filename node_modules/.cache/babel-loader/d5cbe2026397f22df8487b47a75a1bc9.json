{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig'; // Import Firestore instance\nimport { doc, getDoc } from 'firebase/firestore';\nconst StudentDashboard = () => {\n  const [assignment, setAssignment] = useState(null);\n\n  // Example of fetching data\n  useEffect(() => {\n    const fetchAssignment = async () => {\n      const userEmail = 'jefenagracia10@gmail.com'; // Replace with actual logged-in user email dynamically if available\n      const projectDocId = `${userEmail}-Project A`; // Adjust if you want to use different project names dynamically\n      console.log(`Attempting to fetch document with ID: ${projectDocId}`);\n      const assignmentRef = doc(db, 'projects', projectDocId); // Updated collection name to 'projects'\n      const docSnap = await getDoc(assignmentRef);\n      if (docSnap.exists()) {\n        setAssignment(docSnap.data());\n      } else {\n        console.log(`No document found with ID: ${projectDocId}`);\n      }\n    };\n    fetchAssignment();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Student Dashboard\"), assignment ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Assigned Project: \", assignment.projectName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Team Name: \", assignment.teamName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Assigned At: \", assignment.assignedAt)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"No assignment found.\"));\n};\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","StudentDashboard","assignment","setAssignment","fetchAssignment","userEmail","projectDocId","console","log","assignmentRef","docSnap","exists","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","projectName","teamName","assignedAt"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig'; // Import Firestore instance\nimport { doc, getDoc } from 'firebase/firestore';\n\nconst StudentDashboard = () => {\n  const [assignment, setAssignment] = useState(null);\n\n  // Example of fetching data\n  useEffect(() => {\n    const fetchAssignment = async () => {\n      const userEmail = 'jefenagracia10@gmail.com'; // Replace with actual logged-in user email dynamically if available\n      const projectDocId = `${userEmail}-Project A`; // Adjust if you want to use different project names dynamically\n      console.log(`Attempting to fetch document with ID: ${projectDocId}`);\n\n      const assignmentRef = doc(db, 'projects', projectDocId); // Updated collection name to 'projects'\n      const docSnap = await getDoc(assignmentRef);\n\n      if (docSnap.exists()) {\n        setAssignment(docSnap.data());\n      } else {\n        console.log(`No document found with ID: ${projectDocId}`);\n      }\n    };\n\n    fetchAssignment();\n  }, []);\n\n  return (\n    <div>\n      <h2>Student Dashboard</h2>\n      {assignment ? (\n        <div>\n          <h3>Assigned Project: {assignment.projectName}</h3>\n          <p>Team Name: {assignment.teamName}</p>\n          <p>Assigned At: {assignment.assignedAt}</p>\n        </div>\n      ) : (\n        <p>No assignment found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,mBAAmB,CAAC,CAAC;AACxC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAEhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,SAAS,GAAG,0BAA0B,CAAC,CAAC;MAC9C,MAAMC,YAAY,GAAG,GAAGD,SAAS,YAAY,CAAC,CAAC;MAC/CE,OAAO,CAACC,GAAG,CAAC,yCAAyCF,YAAY,EAAE,CAAC;MAEpE,MAAMG,aAAa,GAAGV,GAAG,CAACD,EAAE,EAAE,UAAU,EAAEQ,YAAY,CAAC,CAAC,CAAC;MACzD,MAAMI,OAAO,GAAG,MAAMV,MAAM,CAACS,aAAa,CAAC;MAE3C,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QACpBR,aAAa,CAACO,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLL,OAAO,CAACC,GAAG,CAAC,8BAA8BF,YAAY,EAAE,CAAC;MAC3D;IACF,CAAC;IAEDF,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBAAqB,CAAC,EACzBjB,UAAU,gBACTP,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACExB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oBAAkB,EAACjB,UAAU,CAACkB,WAAgB,CAAC,eACnDzB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,aAAW,EAACjB,UAAU,CAACmB,QAAY,CAAC,eACvC1B,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,eAAa,EAACjB,UAAU,CAACoB,UAAc,CACvC,CAAC,gBAEN3B,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,sBAAuB,CAEzB,CAAC;AAEV,CAAC;AAED,eAAelB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}