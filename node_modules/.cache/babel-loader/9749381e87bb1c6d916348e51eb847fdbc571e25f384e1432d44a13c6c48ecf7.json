{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/Documents/GitHub/creative_assistant/src/components/Projects.js\",\n  _s = $RefreshSig$();\n// Projects.js\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, doc, setDoc, getDocs } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const {\n    classroomId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const projectsCollection = collection(db, 'classrooms', classroomId, 'projects');\n        const querySnapshot = await getDocs(projectsCollection);\n        setProjects(querySnapshot.docs.map(doc => doc.data()));\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching projects');\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, [classroomId]);\n  const handleFileUpload = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleProjectUpload = async () => {\n    if (!file) {\n      setError('Please upload a valid Excel file.');\n      return;\n    }\n    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.csv')) {\n      setError('Please upload an Excel (.xlsx) or CSV file.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    const reader = new FileReader();\n    reader.onload = async event => {\n      try {\n        const fileData = event.target.result;\n        const workbook = XLSX.read(fileData, {\n          type: 'binary'\n        });\n        const sheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n        const classroomRef = doc(db, 'classrooms', classroomId);\n\n        // Reset projects list before adding new projects\n        setProjects([]);\n        for (const row of jsonData) {\n          const {\n            'Project Name': projectName,\n            'Team Members': teamMembers\n          } = row;\n          if (projectName && teamMembers) {\n            const projectRef = doc(collection(classroomRef, 'projects'), projectName);\n            await setDoc(projectRef, {\n              projectName,\n              teamMembers: teamMembers.split(',').map(member => member.trim()) // Split by commas if multiple members\n            });\n          }\n        }\n\n        // Refresh projects list after upload\n        const projectsCollection = collection(db, 'classrooms', classroomId, 'projects');\n        const querySnapshot = await getDocs(projectsCollection);\n        setProjects(querySnapshot.docs.map(doc => doc.data()));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error uploading projects:', err);\n        setError('An error occurred while processing the file.');\n        setLoading(false);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const handleProjectClick = projectName => {\n    navigate(`/classroom/${classroomId}/projects/${projectName}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx,.csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleProjectUpload,\n      children: \"Upload Project Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleProjectClick(project.projectName),\n        className: \"project-button\",\n        children: project.projectName\n      }, project.projectName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"Mdpwkwp76DQoJcC+uOaUnhrvz2s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","doc","setDoc","getDocs","XLSX","useParams","useNavigate","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","loading","setLoading","error","setError","file","setFile","classroomId","navigate","fetchProjects","projectsCollection","querySnapshot","docs","map","data","err","handleFileUpload","e","target","files","handleProjectUpload","name","endsWith","reader","FileReader","onload","event","fileData","result","workbook","read","type","sheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","classroomRef","row","projectName","teamMembers","projectRef","split","member","trim","console","readAsBinaryString","handleProjectClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","length","project","_c","$RefreshReg$"],"sources":["/Users/jefenaprakash/Documents/GitHub/creative_assistant/src/components/Projects.js"],"sourcesContent":["// Projects.js\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, doc, setDoc, getDocs } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Projects.css';\n\nconst Projects = () => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const { classroomId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const projectsCollection = collection(db, 'classrooms', classroomId, 'projects');\n        const querySnapshot = await getDocs(projectsCollection);\n        setProjects(querySnapshot.docs.map(doc => doc.data()));\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching projects');\n        setLoading(false);\n      }\n    };\n\n    fetchProjects();\n  }, [classroomId]);\n\n  const handleFileUpload = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleProjectUpload = async () => {\n    if (!file) {\n      setError('Please upload a valid Excel file.');\n      return;\n    }\n\n    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.csv')) {\n      setError('Please upload an Excel (.xlsx) or CSV file.');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    const reader = new FileReader();\n    reader.onload = async (event) => {\n      try {\n        const fileData = event.target.result;\n        const workbook = XLSX.read(fileData, { type: 'binary' });\n        const sheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n\n        const classroomRef = doc(db, 'classrooms', classroomId);\n\n        // Reset projects list before adding new projects\n        setProjects([]);\n\n        for (const row of jsonData) {\n          const { 'Project Name': projectName, 'Team Members': teamMembers } = row;\n\n          if (projectName && teamMembers) {\n            const projectRef = doc(collection(classroomRef, 'projects'), projectName);\n            await setDoc(projectRef, {\n              projectName,\n              teamMembers: teamMembers.split(',').map(member => member.trim()), // Split by commas if multiple members\n            });\n          }\n        }\n\n        // Refresh projects list after upload\n        const projectsCollection = collection(db, 'classrooms', classroomId, 'projects');\n        const querySnapshot = await getDocs(projectsCollection);\n        setProjects(querySnapshot.docs.map(doc => doc.data()));\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error uploading projects:', err);\n        setError('An error occurred while processing the file.');\n        setLoading(false);\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  const handleProjectClick = (projectName) => {\n    navigate(`/classroom/${classroomId}/projects/${projectName}`);\n  };\n\n  return (\n    <div className=\"projects\">\n      <h2>Manage Projects</h2>\n      <input type=\"file\" accept=\".xlsx,.csv\" onChange={handleFileUpload} />\n      <button onClick={handleProjectUpload}>Upload Project Data</button>\n\n      {loading && <p>Loading...</p>}\n      {error && <p className=\"error\">{error}</p>}\n\n      <div className=\"projects-list\">\n        {projects.length > 0 ? (\n          projects.map((project) => (\n            <button\n              key={project.projectName}\n              onClick={() => handleProjectClick(project.projectName)}\n              className=\"project-button\"\n            >\n              {project.projectName}\n            </button>\n          ))\n        ) : (\n          <p>No projects available yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}