{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/TeacherDashboard.js\";\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx'; // Import XLSX\n\nfunction HomePage() {\n  const [file, setFile] = useState(null);\n  const [projectTitle, setProjectTitle] = useState('');\n  const [students, setStudents] = useState([]);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleTitleChange = event => {\n    setProjectTitle(event.target.value);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please upload a file.');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const json = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        setStudents(json.slice(1).map(row => ({\n          name: row[0],\n          email: row[1],\n          group: row[2]\n        })));\n        console.log('Uploaded students:', json);\n      } catch (error) {\n        console.error('Error parsing the Excel file:', error);\n        alert('Error processing file. Please check the format.');\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const handleSubmit = async () => {\n    if (projectTitle === '' || students.length === 0) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    const projectData = {\n      title: projectTitle,\n      students\n    };\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(projectData)\n      });\n      if (response.ok) {\n        alert('Project submitted successfully!');\n        setProjectTitle('');\n        setFile(null);\n        setStudents([]);\n      } else {\n        alert('Failed to submit the project.');\n      }\n    } catch (error) {\n      console.error('Error submitting project:', error);\n      alert('Error submitting project.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Welcome! You are logged in.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-creation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Create a New Project\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Project Title\",\n    value: projectTitle,\n    onChange: handleTitleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Upload Students\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Submit Project\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Uploaded Students:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, students.map((student, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, student.name, \" - \", student.email, \" - Group: \", student.group))))));\n}\nexport default HomePage;","map":{"version":3,"names":["React","useState","XLSX","HomePage","file","setFile","projectTitle","setProjectTitle","students","setStudents","handleFileChange","event","target","files","handleTitleChange","value","handleUpload","alert","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","worksheet","Sheets","SheetNames","json","utils","sheet_to_json","header","slice","map","row","name","email","group","console","log","error","readAsArrayBuffer","handleSubmit","length","projectData","title","response","fetch","method","headers","body","JSON","stringify","ok","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","accept","onClick","student","index","key"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/TeacherDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx'; // Import XLSX\n\nfunction HomePage() {\n  const [file, setFile] = useState(null);\n  const [projectTitle, setProjectTitle] = useState('');\n  const [students, setStudents] = useState([]);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleTitleChange = (event) => {\n    setProjectTitle(event.target.value);\n  };\n\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please upload a file.');\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target.result);\n        const workbook = XLSX.read(data, { type: 'array' });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const json = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        setStudents(json.slice(1).map(row => ({\n          name: row[0],\n          email: row[1],\n          group: row[2]\n        })));\n        console.log('Uploaded students:', json);\n      } catch (error) {\n        console.error('Error parsing the Excel file:', error);\n        alert('Error processing file. Please check the format.');\n      }\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const handleSubmit = async () => {\n    if (projectTitle === '' || students.length === 0) {\n      alert('Please fill in all fields.');\n      return;\n    }\n\n    const projectData = {\n      title: projectTitle,\n      students,\n    };\n\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(projectData),\n      });\n\n      if (response.ok) {\n        alert('Project submitted successfully!');\n        setProjectTitle('');\n        setFile(null);\n        setStudents([]);\n      } else {\n        alert('Failed to submit the project.');\n      }\n    } catch (error) {\n      console.error('Error submitting project:', error);\n      alert('Error submitting project.');\n    }\n  };\n\n  return (\n    <div className=\"home-page\">\n      <h1>Welcome! You are logged in.</h1>\n      <div className=\"project-creation\">\n        <h2>Create a New Project</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Project Title\"\n          value={projectTitle}\n          onChange={handleTitleChange}\n        />\n        <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileChange} />\n        <button onClick={handleUpload}>Upload Students</button>\n        <button onClick={handleSubmit}>Submit Project</button>\n        <div>\n          <h3>Uploaded Students:</h3>\n          <ul>\n            {students.map((student, index) => (\n              <li key={index}>\n                {student.name} - {student.email} - Group: {student.group}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}