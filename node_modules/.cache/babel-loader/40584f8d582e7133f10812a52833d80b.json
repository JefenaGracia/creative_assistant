{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/ManageClassroom.js\";\n// ManageClassroom.js\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, doc, getDoc, setDoc, deleteDoc } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ManageClassroom.css';\nconst ManageClassroom = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [classID, setClassID] = useState('');\n  const {\n    classroomId\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchClassroomStudents = async () => {\n      const classroomRef = doc(db, 'classrooms', classroomId);\n      const studentsCollection = collection(classroomRef, 'students');\n      const querySnapshot = await getDocs(studentsCollection);\n      setStudents(querySnapshot.docs.map(doc => doc.data()));\n    };\n    fetchClassroomStudents();\n  }, [classroomId]);\n  const handleStudentRemove = async email => {\n    const classroomRef = doc(db, 'classrooms', classroomId);\n    const studentRef = doc(classroomRef, 'students', email);\n    await deleteDoc(studentRef);\n    setStudents(students.filter(student => student.email !== email));\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async event => {\n      const fileData = event.target.result;\n      const workbook = XLSX.read(fileData, {\n        type: 'binary'\n      });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(sheet);\n\n      // Process each student and add to Firestore\n      const classroomRef = doc(db, 'classrooms', classroomId);\n      for (const row of jsonData) {\n        const {\n          'Student Email': email,\n          'First name': firstName,\n          'Last name': lastName\n        } = row;\n        if (email && firstName && lastName) {\n          const studentRef = doc(collection(classroomRef, 'students'), email);\n          await setDoc(studentRef, {\n            email,\n            firstName,\n            lastName\n          });\n        }\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manage-classroom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Manage Students\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx,.csv\",\n    onChange: handleFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"student-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, students.map(student => /*#__PURE__*/React.createElement(\"div\", {\n    key: student.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, student.lastName, \", \", student.firstName), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleStudentRemove(student.email),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Remove\")))));\n};\nexport default ManageClassroom;","map":{"version":3,"names":["React","useState","useEffect","db","collection","doc","getDoc","setDoc","deleteDoc","XLSX","useNavigate","useParams","ManageClassroom","students","setStudents","loading","setLoading","classID","setClassID","classroomId","navigate","fetchClassroomStudents","classroomRef","studentsCollection","querySnapshot","getDocs","docs","map","data","handleStudentRemove","email","studentRef","filter","student","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","fileData","result","workbook","read","type","sheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","row","firstName","lastName","readAsBinaryString","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","key","onClick"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/ManageClassroom.js"],"sourcesContent":["// ManageClassroom.js\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, doc, getDoc, setDoc, deleteDoc } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ManageClassroom.css';\n\nconst ManageClassroom = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [classID, setClassID] = useState('');\n  const { classroomId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchClassroomStudents = async () => {\n      const classroomRef = doc(db, 'classrooms', classroomId);\n      const studentsCollection = collection(classroomRef, 'students');\n      const querySnapshot = await getDocs(studentsCollection);\n      setStudents(querySnapshot.docs.map(doc => doc.data()));\n    };\n\n    fetchClassroomStudents();\n  }, [classroomId]);\n\n  const handleStudentRemove = async (email) => {\n    const classroomRef = doc(db, 'classrooms', classroomId);\n    const studentRef = doc(classroomRef, 'students', email);\n    await deleteDoc(studentRef);\n    setStudents(students.filter(student => student.email !== email));\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    \n    reader.onload = async (event) => {\n      const fileData = event.target.result;\n      const workbook = XLSX.read(fileData, { type: 'binary' });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(sheet);\n      \n      // Process each student and add to Firestore\n      const classroomRef = doc(db, 'classrooms', classroomId);\n      for (const row of jsonData) {\n        const { 'Student Email': email, 'First name': firstName, 'Last name': lastName } = row;\n\n        if (email && firstName && lastName) {\n          const studentRef = doc(collection(classroomRef, 'students'), email);\n          await setDoc(studentRef, { email, firstName, lastName });\n        }\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  return (\n    <div className=\"manage-classroom\">\n      <h2>Manage Students</h2>\n      <input type=\"file\" accept=\".xlsx,.csv\" onChange={handleFileUpload} />\n      <div className=\"student-list\">\n        {students.map(student => (\n          <div key={student.email}>\n            <p>{student.lastName}, {student.firstName}</p>\n            <button onClick={() => handleStudentRemove(student.email)}>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ManageClassroom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}