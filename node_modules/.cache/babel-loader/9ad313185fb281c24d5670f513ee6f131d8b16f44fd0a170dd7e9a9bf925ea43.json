{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/Documents/GitHub/creative_assistant/src/components/ManageClassroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, doc, getDocs, setDoc, deleteDoc, getDoc } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ManageClassroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageClassroom = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [fileError, setFileError] = useState(null);\n  const {\n    classroomId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Fetching the list of students from the classroom\n  useEffect(() => {\n    const fetchClassroomStudents = async () => {\n      try {\n        const classroomRef = doc(db, 'classrooms', classroomId);\n        const studentsCollection = collection(classroomRef, 'students');\n        const querySnapshot = await getDocs(studentsCollection);\n        setStudents(querySnapshot.docs.map(doc => doc.data()));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n        setLoading(false);\n      }\n    };\n    fetchClassroomStudents();\n  }, [classroomId]);\n\n  // Handle removing a student from the classroom\n  const handleStudentRemove = async email => {\n    try {\n      const classroomRef = doc(db, 'classrooms', classroomId);\n      const studentRef = doc(classroomRef, 'students', email);\n      await deleteDoc(studentRef);\n      setStudents(students.filter(student => student.email !== email));\n    } catch (error) {\n      console.error('Error removing student:', error);\n    }\n  };\n\n  // Handle file upload to add students\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async event => {\n      try {\n        setFileError(null);\n        const fileData = event.target.result;\n        const workbook = XLSX.read(fileData, {\n          type: 'array'\n        });\n        const sheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n        const newStudents = await processStudents(jsonData);\n        setStudents(prevStudents => [...prevStudents, ...newStudents]);\n\n        // Redirect to the classroom details page after adding students\n        navigate(`/classroom/${classroomId}`);\n      } catch (error) {\n        setFileError('Error reading file. Please make sure the file is in a valid format.');\n        console.error('Error reading file:', error);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  // Refactor student processing\n  const processStudents = async jsonData => {\n    const classroomRef = doc(db, 'classrooms', classroomId);\n    const newStudents = [];\n    for (const row of jsonData) {\n      const {\n        'Student Email': email,\n        'First name': firstName,\n        'Last name': lastName\n      } = row;\n      if (email && firstName && lastName) {\n        const studentRef = doc(collection(classroomRef, 'students'), email);\n        const studentSnap = await getDoc(studentRef);\n        if (!studentSnap.exists()) {\n          await setDoc(studentRef, {\n            email,\n            firstName,\n            lastName\n          });\n          newStudents.push({\n            email,\n            firstName,\n            lastName\n          });\n        } else {\n          console.log(`Student with email ${email} already exists.`);\n        }\n      }\n    }\n    return newStudents;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading students...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-classroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx,.csv\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), fileError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: fileError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-list\",\n      children: students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [student.lastName, \", \", student.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStudentRemove(student.email),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, student.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No students in this classroom yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageClassroom, \"5ycIiVk7SAOg9oK4qRQwctxHkmg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ManageClassroom;\nexport default ManageClassroom;\nvar _c;\n$RefreshReg$(_c, \"ManageClassroom\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","doc","getDocs","setDoc","deleteDoc","getDoc","XLSX","useNavigate","useParams","jsxDEV","_jsxDEV","ManageClassroom","_s","students","setStudents","loading","setLoading","fileError","setFileError","classroomId","navigate","fetchClassroomStudents","classroomRef","studentsCollection","querySnapshot","docs","map","data","error","console","handleStudentRemove","email","studentRef","filter","student","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","fileData","result","workbook","read","type","sheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","newStudents","processStudents","prevStudents","readAsArrayBuffer","row","firstName","lastName","studentSnap","exists","push","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","accept","onChange","length","onClick","_c","$RefreshReg$"],"sources":["/Users/jefenaprakash/Documents/GitHub/creative_assistant/src/components/ManageClassroom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, doc, getDocs, setDoc, deleteDoc, getDoc } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ManageClassroom.css';\n\nconst ManageClassroom = () => {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [fileError, setFileError] = useState(null); \n  const { classroomId } = useParams();\n  const navigate = useNavigate();\n\n  // Fetching the list of students from the classroom\n  useEffect(() => {\n    const fetchClassroomStudents = async () => {\n      try {\n        const classroomRef = doc(db, 'classrooms', classroomId);\n        const studentsCollection = collection(classroomRef, 'students');\n        const querySnapshot = await getDocs(studentsCollection);\n        setStudents(querySnapshot.docs.map(doc => doc.data()));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching students:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchClassroomStudents();\n  }, [classroomId]);\n\n  // Handle removing a student from the classroom\n  const handleStudentRemove = async (email) => {\n    try {\n      const classroomRef = doc(db, 'classrooms', classroomId);\n      const studentRef = doc(classroomRef, 'students', email);\n      await deleteDoc(studentRef);\n      setStudents(students.filter(student => student.email !== email));\n    } catch (error) {\n      console.error('Error removing student:', error);\n    }\n  };\n\n  // Handle file upload to add students\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = async (event) => {\n      try {\n        setFileError(null); \n        const fileData = event.target.result;\n        const workbook = XLSX.read(fileData, { type: 'array' });\n        const sheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(sheet);\n\n        const newStudents = await processStudents(jsonData);\n        setStudents((prevStudents) => [...prevStudents, ...newStudents]);\n\n        // Redirect to the classroom details page after adding students\n        navigate(`/classroom/${classroomId}`);\n      } catch (error) {\n        setFileError('Error reading file. Please make sure the file is in a valid format.');\n        console.error('Error reading file:', error);\n      }\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  // Refactor student processing\n  const processStudents = async (jsonData) => {\n    const classroomRef = doc(db, 'classrooms', classroomId);\n    const newStudents = [];\n\n    for (const row of jsonData) {\n      const { 'Student Email': email, 'First name': firstName, 'Last name': lastName } = row;\n\n      if (email && firstName && lastName) {\n        const studentRef = doc(collection(classroomRef, 'students'), email);\n        const studentSnap = await getDoc(studentRef);\n\n        if (!studentSnap.exists()) {\n          await setDoc(studentRef, { email, firstName, lastName });\n          newStudents.push({ email, firstName, lastName });\n        } else {\n          console.log(`Student with email ${email} already exists.`);\n        }\n      }\n    }\n    return newStudents;\n  };\n\n  if (loading) return <p>Loading students...</p>;\n\n  return (\n    <div className=\"manage-classroom\">\n      <h2>Manage Students</h2>\n      {/* File upload for adding students */}\n      <input type=\"file\" accept=\".xlsx,.csv\" onChange={handleFileUpload} />\n      {fileError && <p className=\"error\">{fileError}</p>} {/* Display file error */}\n\n      {/* List of students */}\n      <div className=\"student-list\">\n        {students.length > 0 ? (\n          students.map((student) => (\n            <div key={student.email}>\n              <p>{student.lastName}, {student.firstName}</p>\n              <button onClick={() => handleStudentRemove(student.email)}>Remove</button>\n            </div>\n          ))\n        ) : (\n          <p>No students in this classroom yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ManageClassroom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}