{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc } from 'firebase/firestore';\nconst StudentDashboard = () => {\n  const [assignment, setAssignment] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAssignment = async () => {\n      try {\n        const userEmail = 'jefenagracia10@gmail.com'; // Replace with the logged-in user's email\n        const projectName = 'Project A'; // Or dynamically obtain project names based on user data\n        const documentId = `${userEmail}-${projectName}`;\n        console.log(\"Attempting to fetch document with ID:\", documentId);\n        const assignmentRef = doc(db, 'project', documentId);\n        const docSnap = await getDoc(assignmentRef);\n        if (docSnap.exists()) {\n          console.log(\"Document data:\", docSnap.data());\n          setAssignment(docSnap.data());\n        } else {\n          console.log(\"No document found with ID:\", documentId);\n          setError(\"No assignment found.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching assignment:\", err);\n        setError(\"An error occurred while fetching the assignment.\");\n      }\n    };\n    fetchAssignment();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Student Dashboard\"), assignment ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Assigned Project: \", assignment.projectName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Team Name: \", assignment.teamName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Assigned At: \", assignment.assignedAt)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, error || \"Loading assignment...\"));\n};\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","StudentDashboard","assignment","setAssignment","error","setError","fetchAssignment","userEmail","projectName","documentId","console","log","assignmentRef","docSnap","exists","data","err","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","teamName","assignedAt"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc } from 'firebase/firestore';\n\nconst StudentDashboard = () => {\n  const [assignment, setAssignment] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchAssignment = async () => {\n      try {\n        const userEmail = 'jefenagracia10@gmail.com'; // Replace with the logged-in user's email\n        const projectName = 'Project A'; // Or dynamically obtain project names based on user data\n        const documentId = `${userEmail}-${projectName}`;\n\n        console.log(\"Attempting to fetch document with ID:\", documentId);\n\n        const assignmentRef = doc(db, 'project', documentId);\n        const docSnap = await getDoc(assignmentRef);\n\n        if (docSnap.exists()) {\n          console.log(\"Document data:\", docSnap.data());\n          setAssignment(docSnap.data());\n        } else {\n          console.log(\"No document found with ID:\", documentId);\n          setError(\"No assignment found.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching assignment:\", err);\n        setError(\"An error occurred while fetching the assignment.\");\n      }\n    };\n\n    fetchAssignment();\n  }, []);\n\n  return (\n    <div>\n      <h2>Student Dashboard</h2>\n      {assignment ? (\n        <div>\n          <h3>Assigned Project: {assignment.projectName}</h3>\n          <p>Team Name: {assignment.teamName}</p>\n          <p>Assigned At: {assignment.assignedAt}</p>\n        </div>\n      ) : (\n        <p>{error || \"Loading assignment...\"}</p>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}