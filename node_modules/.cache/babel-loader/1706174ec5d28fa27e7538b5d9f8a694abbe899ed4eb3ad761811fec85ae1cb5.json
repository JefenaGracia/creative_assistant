{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/Documents/GitHub/creative_assistant/src/components/StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, getDocs, doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { gapi } from 'gapi-script';\nimport './StudentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [classrooms, setClassrooms] = useState([]);\n  const [selectedClassroom, setSelectedClassroom] = useState(null);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchClassrooms = async () => {\n      setLoading(true);\n      try {\n        const authInstance = gapi.auth2.getAuthInstance();\n        const googleUser = authInstance.currentUser.get();\n        const profile = googleUser.getBasicProfile();\n        const userEmail = profile.getEmail();\n        const classroomsCollection = collection(db, 'classrooms');\n        const querySnapshot = await getDocs(classroomsCollection);\n        const classroomsData = [];\n        for (const docSnap of querySnapshot.docs) {\n          const studentsSubcollection = collection(docSnap.ref, 'students');\n          const studentDoc = await getDoc(doc(studentsSubcollection, userEmail));\n          if (studentDoc.exists()) {\n            classroomsData.push({\n              id: docSnap.id,\n              classroomName: docSnap.data().classID\n            });\n          }\n        }\n        if (classroomsData.length === 0) {\n          setError('No classrooms found.');\n        }\n        setClassrooms(classroomsData);\n      } catch (error) {\n        console.error(\"Error fetching classrooms:\", error);\n        setError('Error fetching classrooms.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchClassrooms();\n  }, []);\n  const handleClassroomClick = async classroomId => {\n    setLoading(true);\n    setSelectedClassroom(classroomId);\n    setAssignments([]);\n    try {\n      const assignmentsCollection = collection(db, 'classrooms', classroomId, 'projects');\n      const querySnapshot = await getDocs(assignmentsCollection);\n      if (querySnapshot.empty) {\n        setError('No assignments found for this classroom.');\n      } else {\n        const assignmentsData = querySnapshot.docs.map(doc => doc.data());\n        setAssignments(assignmentsData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching assignments:\", error);\n      setError('Error fetching assignments.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const openProjectPage = projectName => {\n    navigate(`/project/${projectName}`);\n  };\n  const handleLogout = () => {\n    const authInstance = gapi.auth2.getAuthInstance();\n    authInstance.signOut().then(() => {\n      navigate('/');\n    }).catch(error => {\n      console.error(\"Error signing out:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"sidebar-button\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"sidebar-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading your classrooms...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : classrooms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classroom-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Classrooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), classrooms.map(classroom => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClassroomClick(classroom.id),\n        className: \"classroom-button\",\n        children: classroom.classroomName\n      }, classroom.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No classrooms found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), selectedClassroom && assignments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignments-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Assignments in \", selectedClassroom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), assignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignment-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: assignment.projectName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openProjectPage(assignment.projectName),\n          className: \"project-button\",\n          children: \"View Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 18\n          }, this), \" \", assignment.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 18\n          }, this), \" \", assignment.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), selectedClassroom && assignments.length === 0]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"GfM/rIpTZxigwAfCBPrdS2d2P0U=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","useNavigate","gapi","jsxDEV","_jsxDEV","StudentDashboard","_s","classrooms","setClassrooms","selectedClassroom","setSelectedClassroom","assignments","setAssignments","loading","setLoading","error","setError","navigate","fetchClassrooms","authInstance","auth2","getAuthInstance","googleUser","currentUser","get","profile","getBasicProfile","userEmail","getEmail","classroomsCollection","querySnapshot","classroomsData","docSnap","docs","studentsSubcollection","ref","studentDoc","exists","push","id","classroomName","data","classID","length","console","handleClassroomClick","classroomId","assignmentsCollection","empty","assignmentsData","map","openProjectPage","projectName","handleLogout","signOut","then","catch","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","classroom","assignment","index","dueDate","status","_c","$RefreshReg$"],"sources":["/Users/jefenaprakash/Documents/GitHub/creative_assistant/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, getDocs, doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { gapi } from 'gapi-script';\nimport './StudentDashboard.css'; \n\nconst StudentDashboard = () => {\n  const [classrooms, setClassrooms] = useState([]);\n  const [selectedClassroom, setSelectedClassroom] = useState(null);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchClassrooms = async () => {\n      setLoading(true);\n      try {\n        const authInstance = gapi.auth2.getAuthInstance();\n        const googleUser = authInstance.currentUser.get();\n        const profile = googleUser.getBasicProfile();\n        const userEmail = profile.getEmail();\n\n        const classroomsCollection = collection(db, 'classrooms');\n        const querySnapshot = await getDocs(classroomsCollection);\n\n        const classroomsData = [];\n        for (const docSnap of querySnapshot.docs) {\n          const studentsSubcollection = collection(docSnap.ref, 'students');\n          const studentDoc = await getDoc(doc(studentsSubcollection, userEmail));\n\n          if (studentDoc.exists()) {\n            classroomsData.push({\n              id: docSnap.id,\n              classroomName: docSnap.data().classID,\n            });\n          }\n        }\n\n        if (classroomsData.length === 0) {\n          setError('No classrooms found.');\n        }\n        setClassrooms(classroomsData);\n      } catch (error) {\n        console.error(\"Error fetching classrooms:\", error);\n        setError('Error fetching classrooms.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchClassrooms();\n  }, []);\n\n  const handleClassroomClick = async (classroomId) => {\n    setLoading(true);\n    setSelectedClassroom(classroomId);\n    setAssignments([]);\n\n    try {\n      const assignmentsCollection = collection(db, 'classrooms', classroomId, 'projects');\n      const querySnapshot = await getDocs(assignmentsCollection);\n\n      if (querySnapshot.empty) {\n        setError('No assignments found for this classroom.');\n      } else {\n        const assignmentsData = querySnapshot.docs.map(doc => doc.data());\n        setAssignments(assignmentsData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching assignments:\", error);\n      setError('Error fetching assignments.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const openProjectPage = (projectName) => {\n    navigate(`/project/${projectName}`);\n  };\n\n  const handleLogout = () => {\n    const authInstance = gapi.auth2.getAuthInstance();\n    authInstance.signOut().then(() => {\n      navigate('/');\n    }).catch((error) => {\n      console.error(\"Error signing out:\", error);\n    });\n  };\n\n  return (\n    <div className=\"student-dashboard\">\n      <div className=\"sidebar\">\n        <button onClick={() => navigate('/')} className=\"sidebar-button\">Home</button>\n        <button onClick={handleLogout} className=\"sidebar-button\">Logout</button>\n      </div>\n      {loading ? (\n        <p>Loading your classrooms...</p>\n      ) : error ? (\n        <p className=\"error\">{error}</p>\n      ) : classrooms.length > 0 ? (\n        <div className=\"classroom-list\">\n          <h1>Your Classrooms</h1>\n          {classrooms.map((classroom) => (\n            <button\n              key={classroom.id}\n              onClick={() => handleClassroomClick(classroom.id)}\n              className=\"classroom-button\"\n            >\n              {classroom.classroomName}\n            </button>\n          ))}\n        </div>\n      ) : (\n        <p>No classrooms found.</p>\n      )}\n\n      {selectedClassroom && assignments.length > 0 && (\n        <div className=\"assignments-list\">\n          <h3>Assignments in {selectedClassroom}</h3>\n          {assignments.map((assignment, index) => (\n            <div key={index} className=\"assignment-card\">\n              <h4>{assignment.projectName}</h4>\n              <button onClick={() => openProjectPage(assignment.projectName)} className=\"project-button\">\n                View Project\n              </button>\n              <p><strong>Due Date:</strong> {assignment.dueDate}</p>\n              <p><strong>Status:</strong> {assignment.status}</p>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {selectedClassroom && assignments.length === 0}\n    </div>\n  );\n}\n\nexport default StudentDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,UAAU,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AACrE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,aAAa;AAClC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMsB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BP,SAAS,CAAC,MAAM;IACd,MAAMwB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClCJ,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMK,YAAY,GAAGjB,IAAI,CAACkB,KAAK,CAACC,eAAe,CAAC,CAAC;QACjD,MAAMC,UAAU,GAAGH,YAAY,CAACI,WAAW,CAACC,GAAG,CAAC,CAAC;QACjD,MAAMC,OAAO,GAAGH,UAAU,CAACI,eAAe,CAAC,CAAC;QAC5C,MAAMC,SAAS,GAAGF,OAAO,CAACG,QAAQ,CAAC,CAAC;QAEpC,MAAMC,oBAAoB,GAAGhC,UAAU,CAACD,EAAE,EAAE,YAAY,CAAC;QACzD,MAAMkC,aAAa,GAAG,MAAMhC,OAAO,CAAC+B,oBAAoB,CAAC;QAEzD,MAAME,cAAc,GAAG,EAAE;QACzB,KAAK,MAAMC,OAAO,IAAIF,aAAa,CAACG,IAAI,EAAE;UACxC,MAAMC,qBAAqB,GAAGrC,UAAU,CAACmC,OAAO,CAACG,GAAG,EAAE,UAAU,CAAC;UACjE,MAAMC,UAAU,GAAG,MAAMpC,MAAM,CAACD,GAAG,CAACmC,qBAAqB,EAAEP,SAAS,CAAC,CAAC;UAEtE,IAAIS,UAAU,CAACC,MAAM,CAAC,CAAC,EAAE;YACvBN,cAAc,CAACO,IAAI,CAAC;cAClBC,EAAE,EAAEP,OAAO,CAACO,EAAE;cACdC,aAAa,EAAER,OAAO,CAACS,IAAI,CAAC,CAAC,CAACC;YAChC,CAAC,CAAC;UACJ;QACF;QAEA,IAAIX,cAAc,CAACY,MAAM,KAAK,CAAC,EAAE;UAC/B3B,QAAQ,CAAC,sBAAsB,CAAC;QAClC;QACAR,aAAa,CAACuB,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACd6B,OAAO,CAAC7B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDC,QAAQ,CAAC,4BAA4B,CAAC;MACxC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM2B,oBAAoB,GAAG,MAAOC,WAAW,IAAK;IAClDhC,UAAU,CAAC,IAAI,CAAC;IAChBJ,oBAAoB,CAACoC,WAAW,CAAC;IACjClC,cAAc,CAAC,EAAE,CAAC;IAElB,IAAI;MACF,MAAMmC,qBAAqB,GAAGlD,UAAU,CAACD,EAAE,EAAE,YAAY,EAAEkD,WAAW,EAAE,UAAU,CAAC;MACnF,MAAMhB,aAAa,GAAG,MAAMhC,OAAO,CAACiD,qBAAqB,CAAC;MAE1D,IAAIjB,aAAa,CAACkB,KAAK,EAAE;QACvBhC,QAAQ,CAAC,0CAA0C,CAAC;MACtD,CAAC,MAAM;QACL,MAAMiC,eAAe,GAAGnB,aAAa,CAACG,IAAI,CAACiB,GAAG,CAACnD,GAAG,IAAIA,GAAG,CAAC0C,IAAI,CAAC,CAAC,CAAC;QACjE7B,cAAc,CAACqC,eAAe,CAAC;MACjC;IACF,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACd6B,OAAO,CAAC7B,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,6BAA6B,CAAC;IACzC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqC,eAAe,GAAIC,WAAW,IAAK;IACvCnC,QAAQ,CAAC,YAAYmC,WAAW,EAAE,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMlC,YAAY,GAAGjB,IAAI,CAACkB,KAAK,CAACC,eAAe,CAAC,CAAC;IACjDF,YAAY,CAACmC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MAChCtC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,CAACuC,KAAK,CAAEzC,KAAK,IAAK;MAClB6B,OAAO,CAAC7B,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC;EAED,oBACEX,OAAA;IAAKqD,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCtD,OAAA;MAAKqD,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBtD,OAAA;QAAQuD,OAAO,EAAEA,CAAA,KAAM1C,QAAQ,CAAC,GAAG,CAAE;QAACwC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9E3D,OAAA;QAAQuD,OAAO,EAAEN,YAAa;QAACI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,EACLlD,OAAO,gBACNT,OAAA;MAAAsD,QAAA,EAAG;IAA0B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC/BhD,KAAK,gBACPX,OAAA;MAAGqD,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAE3C;IAAK;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAC9BxD,UAAU,CAACoC,MAAM,GAAG,CAAC,gBACvBvC,OAAA;MAAKqD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BtD,OAAA;QAAAsD,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBxD,UAAU,CAAC2C,GAAG,CAAEc,SAAS,iBACxB5D,OAAA;QAEEuD,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAACmB,SAAS,CAACzB,EAAE,CAAE;QAClDkB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAE3BM,SAAS,CAACxB;MAAa,GAJnBwB,SAAS,CAACzB,EAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAEN3D,OAAA;MAAAsD,QAAA,EAAG;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B,EAEAtD,iBAAiB,IAAIE,WAAW,CAACgC,MAAM,GAAG,CAAC,iBAC1CvC,OAAA;MAAKqD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtD,OAAA;QAAAsD,QAAA,GAAI,iBAAe,EAACjD,iBAAiB;MAAA;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC1CpD,WAAW,CAACuC,GAAG,CAAC,CAACe,UAAU,EAAEC,KAAK,kBACjC9D,OAAA;QAAiBqD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC1CtD,OAAA;UAAAsD,QAAA,EAAKO,UAAU,CAACb;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjC3D,OAAA;UAAQuD,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACc,UAAU,CAACb,WAAW,CAAE;UAACK,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAE3F;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT3D,OAAA;UAAAsD,QAAA,gBAAGtD,OAAA;YAAAsD,QAAA,EAAQ;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,UAAU,CAACE,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtD3D,OAAA;UAAAsD,QAAA,gBAAGtD,OAAA;YAAAsD,QAAA,EAAQ;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,UAAU,CAACG,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAN3CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAEAtD,iBAAiB,IAAIE,WAAW,CAACgC,MAAM,KAAK,CAAC;EAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAzD,EAAA,CAlIKD,gBAAgB;EAAA,QAMHJ,WAAW;AAAA;AAAAoE,EAAA,GANxBhE,gBAAgB;AAoItB,eAAeA,gBAAgB;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}