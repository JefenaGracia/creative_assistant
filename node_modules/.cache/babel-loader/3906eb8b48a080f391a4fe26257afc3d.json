{"ast":null,"code":"var _jsxFileName = \"/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nconst StudentDashboard = () => {\n  const [assignment, setAssignment] = useState(null);\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    const fetchAssignment = async () => {\n      const userEmail = 'jefenagracia10@gmail.com'; // Replace with actual logged-in user's email\n      const projectId = `${userEmail}-Project A`;\n      const projectRef = doc(db, 'projects', projectId);\n      const docSnap = await getDoc(projectRef);\n      if (docSnap.exists()) {\n        setAssignment(docSnap.data());\n      }\n    };\n    fetchAssignment();\n  }, []);\n  const openTLDraw = () => {\n    navigate(`/tldraw/${assignment.projectName}`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Student Dashboard\"), assignment ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Assigned Project:\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openTLDraw,\n    style: {\n      cursor: 'pointer',\n      color: 'blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, assignment.projectName)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Team: \", assignment.teamName)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"No assignment found.\"));\n};\nexport default StudentDashboard;","map":{"version":3,"names":["React","useEffect","useState","db","doc","getDoc","useNavigate","StudentDashboard","assignment","setAssignment","navigate","fetchAssignment","userEmail","projectId","projectRef","docSnap","exists","data","openTLDraw","projectName","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","color","teamName"],"sources":["/Users/jefenaprakash/creative_assistant/ca_login/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\n\nconst StudentDashboard = () => {\n  const [assignment, setAssignment] = useState(null);\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    const fetchAssignment = async () => {\n      const userEmail = 'jefenagracia10@gmail.com'; // Replace with actual logged-in user's email\n      const projectId = `${userEmail}-Project A`;\n      const projectRef = doc(db, 'projects', projectId);\n      const docSnap = await getDoc(projectRef);\n      if (docSnap.exists()) {\n        setAssignment(docSnap.data());\n      }\n    };\n\n    fetchAssignment();\n  }, []);\n\n  const openTLDraw = () => {\n    navigate(`/tldraw/${assignment.projectName}`);\n  };\n\n  return (\n    <div>\n      <h2>Student Dashboard</h2>\n      {assignment ? (\n        <div>\n          <h3>\n            Assigned Project:{\" \"}\n            <button onClick={openTLDraw} style={{ cursor: 'pointer', color: 'blue' }}>\n              {assignment.projectName}\n            </button>\n          </h3>\n          <p>Team: {assignment.teamName}</p>\n        </div>\n      ) : (\n        <p>No assignment found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMQ,QAAQ,GAAGJ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCL,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,SAAS,GAAG,0BAA0B,CAAC,CAAC;MAC9C,MAAMC,SAAS,GAAG,GAAGD,SAAS,YAAY;MAC1C,MAAME,UAAU,GAAGV,GAAG,CAACD,EAAE,EAAE,UAAU,EAAEU,SAAS,CAAC;MACjD,MAAME,OAAO,GAAG,MAAMV,MAAM,CAACS,UAAU,CAAC;MACxC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QACpBP,aAAa,CAACM,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;MAC/B;IACF,CAAC;IAEDN,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBR,QAAQ,CAAC,WAAWF,UAAU,CAACW,WAAW,EAAE,CAAC;EAC/C,CAAC;EAED,oBACEnB,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE1B,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBAAqB,CAAC,EACzBlB,UAAU,gBACTR,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE1B,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBACe,EAAC,GAAG,eACrB1B,KAAA,CAAAoB,aAAA;IAAQO,OAAO,EAAET,UAAW;IAACU,KAAK,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtElB,UAAU,CAACW,WACN,CACN,CAAC,eACLnB,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAM,EAAClB,UAAU,CAACuB,QAAY,CAC9B,CAAC,gBAEN/B,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,sBAAuB,CAEzB,CAAC;AAEV,CAAC;AAED,eAAenB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}